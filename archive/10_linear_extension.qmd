---
title: "Extension"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      warnings = FALSE,
                      message = FALSE,
                      cache = TRUE,
                      comment = "#>",
                      #results = "hide",
                      digits = 4,
                      error = FALSE)

## clean the R environment
graphics.off()
rm(list = ls())
freshr::freshr()

## load packages
library(here, quietly = TRUE)
library(tidyverse, quietly = TRUE)
library(devtools, quietly = TRUE)

load_all()

## check the directory for the file
# here::dr_here()
here::set_here()

## the figure or results should be saved 
# paste0("foldername/Sfilename_workingresult_", 
#      Sys.Date(), ".filetype")
```

```{css "css-setup", echo=FALSE}
.scroll-100 {
  max-height: 300px;
  max-width: 1000px;
  overflow-y: auto;
  background-color: inherit;
}
```

## Linear model extension

the original lm() with anchor time as factor

the multiple lm() at each anchor time independently

the gls() model with variance and correlation

```{r "kappa_alpha"}
load("figure/tsa_09_euclidean_mahalanobis_slm_vs_mlm_2024-01-12.Rdata")

subset_e_k10_mlm <- attr(e_k10_mlm, "subset")
subset_e_k10_slm <- attr(e_k10_slm, "subset")
subset_m_k10_mlm <- attr(m_k10_mlm, "subset")
subset_m_k10_slm <- attr(m_k10_slm, "subset")
subset_m_a80_mlm <- attr(m_a80_mlm, "subset")
subset_m_a80_slm <- attr(m_a80_slm, "subset")
subset_m_a95_mlm <- attr(m_a95_mlm, "subset")
subset_m_a95_slm <- attr(m_a95_slm, "subset")
```

```{r "kappa_alpha_table", class.output="scroll-100"}

match_m_k10_mlm  <- subset_m_k10_mlm %>%
  map("subset") %>%
  map(~ dplyr::select(., sid) %>%
        unique() %>%
        nrow()) %>%
  unlist() 

match_m_a80_mlm  <- subset_m_a80_mlm %>%
  map("subset") %>%
  map(~ dplyr::select(., sid) %>%
        unique() %>%
        nrow()) %>%
  unlist() 

match_m_a80_slm  <- subset_m_a80_slm %>%
  map("subset") %>%
  map(~ dplyr::select(., sid) %>%
        unique() %>%
        nrow()) %>%
  unlist() 

match_m_a95_mlm  <- subset_m_a95_mlm %>%
  map("subset") %>%
  map(~ dplyr::select(., sid) %>%
        unique() %>%
        nrow()) %>%
  unlist() 

match_m_a95_slm  <- subset_m_a95_slm %>%
  map("subset") %>%
  map(~ dplyr::select(., sid) %>%
        unique() %>%
        nrow()) %>%
  unlist()

matching <- 
  cbind(match_m_k10_mlm, 
        match_m_a80_slm, 
        match_m_a95_slm,
        match_m_a80_mlm,
        match_m_a95_mlm) %>%
  as.data.frame() %>%
  mutate(test_id = 1:570 %>% unique()) %>%
  dplyr::select(test_id, everything())

```

When matching number less than 2, the gamlss does not work

```{r "alpha_kappa", class.output="scroll-100"}
matching
```

```{r "sample_size"}
#| eval: true

cat("The mean of matches for Ma80 SLM: ", mean(match_m_a80_slm), "\n")
cat("The mean of matches for Ma95 SLM: ", mean(match_m_a95_slm), "\n")
cat("The mean of matches for Ma80 MLM: ", mean(match_m_a80_mlm), "\n")
cat("The mean of matches for Ma95 MLM: ", mean(match_m_a95_mlm), "\n")

cat("The median of matches for Ma80 SLM: ", median(match_m_a80_slm), "\n")
cat("The median of matches for Ma95 SLM: ", median(match_m_a95_slm), "\n")
cat("The median of matches for Ma80 MLM: ", median(match_m_a80_mlm), "\n")
cat("The median of matches for Ma95 MLM: ", median(match_m_a95_mlm), "\n")
```

Let's see how about we use 167 $M_{\alpha = 0.8}$ with $E_{\kappa = 167}$ and $M_{\kappa = 167}$.

The purpose is to compensate the small sample size for the $\kappa$ criteria, not sure whether we need 500+ sample size.

```{r "kappa167"}
#| eval: false
#| include: true

anchor <- c(30, 90, 120, 150)
bsk_knots <- c(50, 100, 150)
mlmf <- "log_outcome ~ surgery_type + patient_gender + adi_value +
                      adi_value:log_baseline + primary_payer + 
                      bmi + patient_age +
                      patient_age:log_baseline + log_baseline + t0"
gf <- "log_outcome ~ cs(time, df = 3)"
gs <- "~ cs(time, df = 1)"

lmf <- "log_outcome ~ as.factor(time) + surgery_type + patient_gender +
                      adi_value + adi_value:log_baseline + primary_payer +
                      bmi + patient_age +
                      patient_age:log_baseline + log_baseline + t0"

e_k167_slm <- people_like_us(train_data = tsa_train,
                        test_data = tsa_test,
                        anchor_time = anchor,
                        brokenstick_knots = bsk_knots,
                        linear_model = "lm",
                        linear_formula = lmf,
                        gamlss_formula = gf,
                        gamlss_sigma = gs,
                        tmin = 0,
                        tmax = 100,
                        id_var = "id",
                        outcome_var = "log_outcome",
                        time = "time",
                        weight = FALSE,
                        match_plot = FALSE,
                        predict_plot = FALSE,
                        match_methods = "euclidean",
                        match_number = 167)

e_k167_mlm <- people_like_us(train_data = tsa_train,
                        test_data = tsa_test,
                        anchor_time = anchor,
                        brokenstick_knots = bsk_knots,
                        linear_model = "mlm",
                        linear_formula = mlmf,
                        gamlss_formula = gf,
                        gamlss_sigma = gs,
                        tmin = 0,
                        tmax = 100,
                        id_var = "id",
                        outcome_var = "log_outcome",
                        time = "time",
                        weight = FALSE,
                        match_plot = FALSE,
                        predict_plot = FALSE,
                        match_methods = "euclidean",
                        match_number = 167)

m_k167_slm <- people_like_us(train_data = tsa_train,
                        test_data = tsa_test,
                        anchor_time = anchor,
                        brokenstick_knots = bsk_knots,
                        linear_model = "lm",
                        linear_formula = lmf,
                        gamlss_formula = gf,
                        gamlss_sigma = gs,
                        tmin = 0,
                        tmax = 100,
                        id_var = "id",
                        outcome_var = "log_outcome",
                        time = "time",
                        weight = FALSE,
                        match_plot = FALSE,
                        predict_plot = FALSE,
                        match_methods = "mahalanobis",
                        match_number = 167)

m_k167_mlm <- people_like_us(train_data = tsa_train,
                        test_data = tsa_test,
                        anchor_time = anchor,
                        brokenstick_knots = bsk_knots,
                        linear_model = "mlm",
                        linear_formula = mlmf,
                        gamlss_formula = gf,
                        gamlss_sigma = gs,
                        tmin = 0,
                        tmax = 100,
                        id_var = "id",
                        outcome_var = "log_outcome",
                        time = "time",
                        weight = FALSE,
                        match_plot = FALSE,
                        predict_plot = FALSE,
                        match_methods = "mahalanobis",
                        match_number = 167)

m_a90_mlm <- people_like_us(train_data = tsa_train,
                        test_data = tsa_test,
                        anchor_time = anchor,
                        brokenstick_knots = bsk_knots,
                        linear_model = "mlm",
                        linear_formula = mlmf,
                        gamlss_formula = gf,
                        gamlss_sigma = gs,
                        tmin = 0,
                        tmax = 100,
                        id_var = "id",
                        outcome_var = "log_outcome",
                        time = "time",
                        weight = FALSE,
                        match_plot = FALSE,
                        predict_plot = FALSE,
                        match_methods = "mahalanobis",
                        match_alpha = 0.90)

m_a90_slm <- people_like_us(train_data = tsa_train,
                        test_data = tsa_test,
                        anchor_time = anchor,
                        brokenstick_knots = bsk_knots,
                        linear_model = "lm",
                        linear_formula = lmf,
                        gamlss_formula = gf,
                        gamlss_sigma = gs,
                        tmin = 0,
                        tmax = 100,
                        id_var = "id",
                        outcome_var = "log_outcome",
                        time = "time",
                        weight = FALSE,
                        match_plot = FALSE,
                        predict_plot = FALSE,
                        match_methods = "mahalanobis",
                        match_alpha = 0.90)

save(e_k167_mlm, e_k167_slm, 
     m_k167_mlm, m_k167_slm, 
     m_a80_mlm, m_a80_slm,
     m_a95_mlm, m_a95_slm,
     m_a90_mlm, m_a90_slm,
     file = paste0("figure/tsa_10_alpha80_kappa167_relationship_", Sys.Date(), ".Rdata"))
```

```{r "summarization_k167"}

load("figure/tsa_10_alpha80_kappa167_relationship_2024-01-14.Rdata")

meanout <- function(dataset){
  # browser()
  result0 <- dataset %>%
    as.data.frame() %>%
    mutate(mse = bias^2) 
  result1 <- result0 %>%
    colMeans() %>%
    unlist()
  return(result1)}


result_ek167s <- map(e_k167_slm, "centiles_observed") %>%
  map_dfr(~try(meanout(.))) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()

result_ek167m <- map(e_k167_mlm, "centiles_observed") %>%
  map_dfr(~try(meanout(.))) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()

result_mk167s <- map(m_k167_slm, "centiles_observed") %>%
  map_dfr(~try(meanout(.))) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()

result_mk167m <- map(m_k167_mlm, "centiles_observed") %>%
  map_dfr(~try(meanout(.))) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()

## there is no target without any matches
result_ma80s <- map(m_a80_slm, "centiles_observed") %>%
  map_dfr(~try(meanout(.))) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()
  
## there are 8 targets without any matches
result_ma80m <- map(m_a80_mlm, "centiles_observed") %>%
  map(~try(meanout(.)) %>% unlist()) 
result_ma80m[grep("Error", result_ma80m)] <- NULL
result_ma80m <- result_ma80m %>%
  map_dfr(~t(.) %>% as.data.frame()) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()


result_ma90m <- map(m_a90_mlm, "centiles_observed") %>%
  map(~try(meanout(.)) %>% unlist()) 
result_ma90m[grep("Error", result_ma90m)] <- NULL
result_ma90m <- result_ma90m %>%
  map_dfr(~t(.) %>% as.data.frame()) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()


result_ma90s <- map(m_a90_slm, "centiles_observed") %>%
  map(~try(meanout(.)) %>% unlist()) 
result_ma90s[grep("Error", result_ma90s)] <- NULL
result_ma90s <- result_ma90s %>%
  map_dfr(~t(.) %>% as.data.frame()) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()


result_ma95s <- map(m_a95_slm, "centiles_observed") %>%
  map(~try(meanout(.)) %>% unlist()) 
result_ma95s[grep("Error", result_ma95s)] <- NULL
result_ma95s <- result_ma95s %>%
  map_dfr(~t(.) %>% as.data.frame()) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()

result_ma95m <- map(m_a95_mlm, "centiles_observed") %>%
  map(~try(meanout(.)) %>% unlist()) 
result_ma95m[grep("Error", result_ma95m)] <- NULL
result_ma95m <- result_ma95m %>%
  map_dfr(~t(.) %>% as.data.frame()) %>%
  dplyr::select(coverage50, coverage80, coverage90, bias, mse) %>%
  colMeans()


```

```{r "final_table",  class.output="scroll-100"}
rbind(Ek167_SLM = result_ek167s, 
      Ek167_MLM = result_ek167m,
      Mk167_SLM = result_mk167s, 
      Mk167_MLM = result_mk167m,
      Ma80_SLM = result_ma80s,
      Ma90_SLM = result_ma90s,
      Ma95_SLM = result_ma95s,
      Ma80_MLM = result_ma80m,
      Ma90_MLM = result_ma90m,
      Ma95_MLM = result_ma95m) %>%
  as.data.frame() %>% 
  rownames_to_column("methods") %>%
  separate("methods", into = c("Criteria", "LM"))
```

We see with MLM the best performance is around $M_{\alpha = 0. 80}$

We also see with SLM the best performance is around $M_{\alpha = 0.95}$

3 missing matching $M_{\alpha = 0.8}$ is still reasonable to use

performance of $M_{\alpha = 0.90}$ is the worst among the MLM $M_{\alpha}$

20 missing matching $M_{\alpha = 95}$ improves the performance

SLM is not as bad as I thought, the direction of improving PLM linear model goes towards two direction:

-   SLM with larger $\alpha$ values, which is our original setting

-   MLM with reasonable $\alpha$ values, I guess this would be similar to GLS

-   large $\kappa$ value can compensate the disadvantages, but still not as good as $\alpha = 0.95$\

-   there are certain patients, would have really good prediction... others really bad...

-   for missing matches, slm with extreme large $\alpha > 0.95$ but mlm with medium $\alpha > 0.80$

-   not sure whether mlm $M_{\alpha}$ is sensitive for this specific dataset

-   one hypothesis we have earlier is Mahalnaobis is not the best to use for heterogeneous data, because it shrinks the time interval with highest varibilites. weighted Euclidean is more reasonable, instead we divided the variance, we multiply the variance as weights.

-   the last we need to try is to use the inverted distance as weights, or penalization.
